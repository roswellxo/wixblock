async function z(){const C=await chrome.tabs.query({active:!0,lastFocusedWindow:!0}),O=C[0].url;if(!O)return;const S=new URL(O).hostname;return console.log(`responding with lastActiveTab: ${JSON.stringify(C)} ${S}`),S}var F=function(C){chrome.action.setBadgeBackgroundColor({color:"#FF0000"}),chrome.action.setBadgeText({text:"!"}),chrome.notifications.create({type:"basic",iconUrl:"assets/images/logo.png",title:"Click here to block this wix site!",message:`${C}`,isClickable:!0,requireInteraction:!0,buttons:[{title:"Block"},{title:"Allow"}]},(O)=>{chrome.storage.local.set({[`wix-${O}`]:C})})},x=async()=>(await chrome.storage.local.get("blocklist")).blocklist??[];chrome.runtime.onMessage.addListener(async(C,O,S)=>{const $=await x(),q=O.tab?.id;if(C.checkIfWix){const f=C.url;if(console.log(`checking if ${f} is in blocklist: ${$}`),$.includes(f)){console.log("Redirecting to index.html"),chrome.tabs.update(O.tab?.id??-1,{url:"index.html"}),chrome.action.setBadgeBackgroundColor({color:"#FF0000"}),chrome.action.setBadgeText({text:"!",tabId:O.tab?.id});return}if(console.log(`checking if ${q} is in set:`,j),j.has(`${q}`)){console.log("It's a wix site! Notifying user..."),F(f);return}}if(C.action==="blockSite"){const f=(await chrome.storage.local.get(`sus-${C.id}`))[`sus-${C.id}`];console.log({url:f});const D=[...new Set([...$,f])];chrome.storage.local.set({blocklist:D}),chrome.notifications.clear(C.id)}});chrome.notifications.onClicked.addListener(async(C)=>{const O=(await chrome.storage.local.get(`wix-${C}`))[`wix-${C}`],S=await x(),$=[...new Set([...S,O])];chrome.storage.local.set({blocklist:$}),chrome.notifications.clear(C),chrome.tabs.create({url:"index.html",active:!0})});chrome.notifications.onButtonClicked.addListener(async(C,O)=>{console.log({id:C,btn:O})});chrome.runtime.onConnect.addListener((C)=>{console.assert(C.name==="main"),C.onMessage.addListener(async(O)=>{if(O.action==="activeTab"){const S=await z();C.postMessage({action:"activeTabUrl",url:S})}if(O.action==="getBlocklist"){const S=await x();C.postMessage({action:"getBlocklist",list:S})}if(O.action==="unblockSite"){const $=(await x()).filter((q)=>q!==O.url);chrome.storage.local.set({blocklist:$}),C.postMessage({action:"getBlocklist",list:$})}})});var E=["*://*.parastorage.com/*","*://*.wixstatic.com/*","*://*.wix.com/*"],j=new Set;chrome.webRequest.onBeforeRequest.addListener(function(C){console.log(`blocking ${C.url} in tab ${C.tabId}`),j.add(C.tabId.toString()),console.log(`adding ${C.tabId} to set`,j)},{urls:E},[]);chrome.tabs.onUpdated.addListener((C,O,S)=>{if(console.log(`tab ${C} updated with url ${O.url}`),j.has(`${C}`))j.delete(`${C}`)});
